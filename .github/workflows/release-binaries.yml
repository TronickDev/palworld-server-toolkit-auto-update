# This is a basic workflow to help you get started with Actions

name: create-binaries

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-linux-binary:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.1
      - name: Install dependencies
        run: |
          python --version
          pip install --upgrade pip
          pip install palworld_coord msgpack pyperclip pyinstaller pillow 
      - name: clone and setup repos
        run: |
          cd /tmp
          git clone https://github.com/magicbear/palworld-server-toolkit.git --recurse-submodules palworld-server-toolkit-auto-update
          cd palworld-server-toolkit-auto-update
          git clone https://github.com/cheahjs/palworld-save-tools.git palworld_save_tools
          git clone https://github.com/magicbear/PalEdit.git pal_edit
          git clone https://github.com/magicbear/PalEdit.git palworld_pal_edit
          git submodule update --remote
          cp -rf palworld_save_tools/palworld_save_tools/* palworld_save_tools/
          cp -rf save_tools/palworld_save_tools/* save_tools/
          cp -rf pal_edit/palworld_pal_edit/* pal_edit/
          cp -rf palworld_pal_edit/palworld_pal_edit/* palworld_pal_edit/
      - name: pip install modules requirements
        run: |
          cd /tmp/palworld-server-toolkit-auto-update
          pip install -r requirements.txt
          pip install -r palworld_pal_edit/requirements.txt
          pip install -r pal_edit/requirements.txt
      - name: build executable
        run: |
          cd /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/
          pyinstaller --noconfirm --onefile --windowed --hidden-import=PIL "editor.py"    
      - name: create zip file
        run: |
          cd /tmp
          mkdir palworld-server-toolkit-auto-update-linux-binary
          mkdir palworld-server-toolkit-auto-update-linux-binary/resources
          cp -rf /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/dist/* /tmp/palworld-server-toolkit-auto-update-linux-binary
          cp -rf /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/resources/* /tmp/palworld-server-toolkit-auto-update-linux-binary/resources
          cp -rf /tmp/palworld-server-toolkit-auto-update/palworld_pal_edit/resources/* /tmp/palworld-server-toolkit-auto-update-linux-binary/resources
          zip -r /tmp/palworld-server-toolkit-auto-update-linux-binary.zip /tmp/palworld-server-toolkit-auto-update-linux-binary
      - name: show result
        run: |
          cd /tmp
          ls /tmp
          echo "--> BUILDING \"linux-binary\" DONE! <--"
      - name: uploding linux-binary artifact to workflow
        uses: actions/upload-artifact@v4
        with:
          name: palworld-server-toolkit-auto-update-linux-binary.zip
          path: /tmp/palworld-server-toolkit-auto-update-linux-binary.zip

  build-macos-binary:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.1
      - name: Install dependencies
        run: |
          python --version
          pip install --upgrade pip
          pip install palworld_coord msgpack pyperclip pyinstaller pillow 
      - name: clone and setup repos
        run: |
          cd /tmp
          git clone https://github.com/magicbear/palworld-server-toolkit.git --recurse-submodules palworld-server-toolkit-auto-update
          cd palworld-server-toolkit-auto-update
          git clone https://github.com/cheahjs/palworld-save-tools.git palworld_save_tools
          git clone https://github.com/magicbear/PalEdit.git pal_edit
          git clone https://github.com/magicbear/PalEdit.git palworld_pal_edit
          git submodule update --remote
          cp -rf palworld_save_tools/palworld_save_tools/* palworld_save_tools/
          cp -rf save_tools/palworld_save_tools/* save_tools/
          cp -rf pal_edit/palworld_pal_edit/* pal_edit/
          cp -rf palworld_pal_edit/palworld_pal_edit/* palworld_pal_edit/
      - name: pip install modules requirements
        run: |
          cd /tmp/palworld-server-toolkit-auto-update
          pip install -r requirements.txt
          pip install -r palworld_pal_edit/requirements.txt
          pip install -r pal_edit/requirements.txt
      - name: build executable
        run: |
          cd /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/
          pyinstaller --noconfirm --onefile --windowed --hidden-import=PIL "editor.py"    
      - name: create zip file
        run: |
          cd /tmp
          mkdir palworld-server-toolkit-auto-update-macos-binary
          mkdir palworld-server-toolkit-auto-update-macos-binary/resources
          cp -rf /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/dist/* /tmp/palworld-server-toolkit-auto-update-macos-binary
          cp -rf /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/resources/* /tmp/palworld-server-toolkit-auto-update-macos-binary/resources
          cp -rf /tmp/palworld-server-toolkit-auto-update/palworld_pal_edit/resources/* /tmp/palworld-server-toolkit-auto-update-macos-binary/resources
          zip -r /tmp/palworld-server-toolkit-auto-update-macos-binary.zip /tmp/palworld-server-toolkit-auto-update-macos-binary
      - name: show result
        run: |
          cd /tmp
          ls /tmp
          echo "--> BUILDING \"macos-binary\" DONE! <--"
      - name: uploding macos-binary artifact to workflow
        uses: actions/upload-artifact@v4
        with:
          name: palworld-server-toolkit-auto-update-macos-binary.zip
          path: /tmp/palworld-server-toolkit-auto-update-macos-binary.zip
      

  build-windows-binary:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.1
      - name: Install dependencies
        run: |
          python --version
          pip install --upgrade pip
          pip install palworld_coord msgpack pyperclip pyinstaller pillow 
      - name: clone and setup repos
        run: |
          cd /
          mkdir tmp
          cd /tmp
          git clone https://github.com/magicbear/palworld-server-toolkit.git --recurse-submodules palworld-server-toolkit-auto-update
          cd palworld-server-toolkit-auto-update
          git clone https://github.com/cheahjs/palworld-save-tools.git palworld_save_tools
          git clone https://github.com/magicbear/PalEdit.git pal_edit
          git clone https://github.com/magicbear/PalEdit.git palworld_pal_edit
          git submodule update --remote
          xcopy "palworld_save_tools\palworld_save_tools\*" "palworld_save_tools\" /E/H/Y
          xcopy "save_tools\palworld_save_tools\*" "save_tools\" /E/H/Y
          xcopy "pal_edit\palworld_pal_edit\*" "pal_edit\" /E/H/Y
          xcopy "palworld_pal_edit\palworld_pal_edit\*" "palworld_pal_edit\" /E/H/Y
      - name: pip install modules requirements
        run: |
          cd /tmp/palworld-server-toolkit-auto-update
          pip install -r requirements.txt
          pip install -r palworld_pal_edit/requirements.txt
          pip install -r pal_edit/requirements.txt
      - name: build executable
        run: |
          cd /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/
          pyinstaller --noconfirm --onefile --windowed --hidden-import=PIL "editor.py"    
      - name: create zip file
        run: |
          cd /tmp
          mkdir palworld-server-toolkit-auto-update-windows-binary
          mkdir palworld-server-toolkit-auto-update-windows-binary/resources
          xcopy /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/dist/* /tmp/palworld-server-toolkit-auto-update-windows-binary /E/H/Y
          xcopy /tmp/palworld-server-toolkit-auto-update/palworld_server_toolkit/resources/* /tmp/palworld-server-toolkit-auto-update-windows-binary/resources /E/H/Y
          xcopy /tmp/palworld-server-toolkit-auto-update/palworld_pal_edit/resources/* /tmp/palworld-server-toolkit-auto-update-windows-binary/resources /E/H/Y
          powershell Compress-Archive /tmp/palworld-server-toolkit-auto-update-windows-binary /tmp/palworld-server-toolkit-auto-update-windows-binary.zip
      - name: show result
        run: |
          cd /tmp
          ls /tmp
          echo '--> BUILDING "windows-binary" DONE! <--'
      - name: uploding windows-binary artifact to workflow
        uses: actions/upload-artifact@v4
        with:
          name: palworld-server-toolkit-auto-update-windows-binary.zip
          path: /tmp/palworld-server-toolkit-auto-update-windows-binary.zip
      

  build-python-plain:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.1
      - name: clone and setup repos
        run: |
          cd /tmp
          git clone https://github.com/magicbear/palworld-server-toolkit.git --recurse-submodules palworld-server-toolkit-auto-update
          cd palworld-server-toolkit-auto-update
          git clone https://github.com/EternalWraith/PalEdit pal_edit
          git submodule update --remote
      - name: create zip file
        run: |
          cd /tmp
          zip -r /tmp/palworld-server-toolkit-auto-update-python-plain.zip /tmp/palworld-server-toolkit-auto-update
      - name: show result
        run: |
          cd /tmp
          ls
          echo "--> BUILDING \"python-plain\" DONE! <--"
      - name: uploding python-plain artifact to workflow
        uses: actions/upload-artifact@v4
        with:
          name: palworld-server-toolkit-auto-update-python-plain.zip
          path: /tmp/palworld-server-toolkit-auto-update-python-plain.zip

  job_3:
    name: create release
    needs: 
      - build-linux-binary
      - build-macos-binary
      - build-windows-binary
      - build-python-plain
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: download results from job build-linux-binary
        uses: actions/download-artifact@v4
        with:
          name: palworld-server-toolkit-auto-update-linux-binary.zip
      - name: download results from job build-macos-binary
        uses: actions/download-artifact@v4
        with:
          name: palworld-server-toolkit-auto-update-macos-binary.zip
      - name: download results from job build-windows-binary
        uses: actions/download-artifact@v4
        with:
          name: palworld-server-toolkit-auto-update-windows-binary.zip
      - name: download results from job build-python-plain
        uses: actions/download-artifact@v4
        with:
          name: palworld-server-toolkit-auto-update-python-plain.zip
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            palworld-server-toolkit-auto-update-linux-binary.zip
            palworld-server-toolkit-auto-update-macos-binary.zip
            palworld-server-toolkit-auto-update-windows-binary.zip
            palworld-server-toolkit-auto-update-python-plain.zip